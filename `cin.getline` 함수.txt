`cin.getline` 함수

는 `istream` 클래스의 멤버 함수로, 문자열을 입력받는 데 사용됩니다. `cin.getline` 함수의 사용법은 다음과 같습니다.

```cpp
istream& getline(char buf[], int size, char delimitChar = '\n');
```

- `buf`: 문자열을 저장할 배열
- `size`: `buf` 배열의 크기
- `delimitChar`: 입력을 종료할 문자. 이 인자를 생략하면 기본값으로 줄바꿈 문자(`\n`)가 사용됩니다.

`cin.getline` 함수는 `size`보다 작은 크기의 문자열을 입력받을 때까지 입력을 받거나, `delimitChar` 문자를 만날 때까지 입력을 받습니다. 입력된 문자열은 `buf` 배열에 저장되고, 입력받은 문자열의 맨 끝에는 널 문자(`\0`)가 추가됩니다.

`cin.getline` 함수는 `istream` 클래스의 멤버 함수이기 때문에, `cin` 객체와 함께 사용됩니다. 예를 들어, 다음과 같이 사용할 수 있습니다.

```cpp
#include <iostream>
using namespace std;

int main() {
    char name[10];
    cout << "이름을 입력하세요: ";
    cin.getline(name, 10);
    cout << "이름: " << name << endl;
    return 0;
}
```

위 코드에서 `cin.getline` 함수를 사용하여 문자열을 입력받고, 입력받은 문자열을 출력합니다. `buf` 배열의 크기는 10으로 지정되어 있으며, `delimitChar` 인자는 생략되어 기본값인 줄바꿈 문자(`\n`)가 사용됩니다.


`cin.getline` 함수는 `istream` 클래스의 멤버 함수로, 문자열을 입력받는 데 사용됩니다. `cin.getline` 함수의 사용법은 다음과 같습니다.

```cpp
istream& getline(char buf[], int size, char delimitChar = '\n');
```

- `buf`: 문자열을 저장할 배열
- `size`: `buf` 배열의 크기
- `delimitChar`: 입력을 종료할 문자. 이 인자를 생략하면 기본값으로 줄바꿈 문자(`\n`)가 사용됩니다.

`cin.getline` 함수는 `size`보다 작은 크기의 문자열을 입력받을 때까지 입력을 받거나, `delimitChar` 문자를 만날 때까지 입력을 받습니다. 입력된 문자열은 `buf` 배열에 저장되고, 입력받은 문자열의 맨 끝에는 널 문자(`\0`)가 추가됩니다.

`cin.getline` 함수는 `istream` 클래스의 멤버 함수이기 때문에, `cin` 객체와 함께 사용됩니다. 예를 들어, 다음과 같이 사용할 수 있습니다.

```cpp
#include <iostream>
using namespace std;

int main() {
    char name[10];
    cout << "이름을 입력하세요: ";
    cin.getline(name, 10);
    cout << "이름: " << name << endl;
    return 0;
}
```

위 코드에서 `cin.getline` 함수를 사용하여 문자열을 입력받고, 입력받은 문자열을 출력합니다. `buf` 배열의 크기는 10으로 지정되어 있으며, `delimitChar` 인자는 생략되어 기본값인 줄바꿈 문자(`\n`)가 사용됩니다.


네, 맞습니다. 줄바꿈 문자(`\n`)는 일반적으로 엔터 키를 누르면 입력되는 문자입니다. 줄바꿈 문자는 문자열에서 한 줄의 끝을 나타내는 역할을 합니다. 따라서 `cin.getline` 함수에서 `delimitChar` 인자를 생략하면, 한 줄의 끝까지 문자열을 입력받게 됩니다. 

예를 들어, 다음과 같은 코드를 실행하면, 사용자가 엔터 키를 입력할 때까지 문자열을 입력받습니다.

```cpp
#include <iostream>
using namespace std;

int main() {
    char str[100];
    cout << "문자열을 입력하세요: ";
    cin.getline(str, 100);
    cout << "입력된 문자열: " << str << endl;
    return 0;
}
```

위 코드에서 `cin.getline` 함수의 `delimitChar` 인자가 생략되어 있으므로, 사용자가 엔터 키를 입력할 때까지 문자열을 입력받습니다. 사용자가 "Hello world!"라는 문자열을 입력하고 엔터 키를 누르면, 입력된 문자열은 "Hello world!"가 됩니다.



